// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target x86_64-apple-ios15.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name CompassIosSdk
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import AdSupport
@_exported import CompassIosSdk
import Swift
import SwiftUI
import UIKit
import WebKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_Concurrency.MainActor @preconcurrency public struct CompassInterstitialUIView : SwiftUI.UIViewRepresentable {
  @_Concurrency.MainActor @preconcurrency public init(spot: Swift.String, appId: Swift.String, kvSet: CompassIosSdk.KvSet? = nil, errorHandler: ((Swift.String) -> Swift.Void)? = nil)
  @_Concurrency.MainActor @preconcurrency public func updateUIView(_: UIKit.UIView, context _: CompassIosSdk.CompassInterstitialUIView.Context)
  @_Concurrency.MainActor @preconcurrency public func makeUIView(context _: CompassIosSdk.CompassInterstitialUIView.Context) -> UIKit.UIView
  public typealias Body = Swift.Never
  public typealias Coordinator = Swift.Void
  public typealias UIViewType = UIKit.UIView
}
@objc @_inheritsConvenienceInitializers @objcMembers @_Concurrency.MainActor @preconcurrency public class CompassInterstitialView : UIKit.UIView, WebKit.WKNavigationDelegate, WebKit.WKScriptMessageHandler {
  @_Concurrency.MainActor @preconcurrency @objc required dynamic public init?(coder: Foundation.NSCoder)
  @_Concurrency.MainActor @preconcurrency @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @objc @_Concurrency.MainActor @preconcurrency public func load(spot: Swift.String, appId: Swift.String, kvSet: CompassIosSdk.KvSet? = nil, errorHandler: ((Swift.String) -> Swift.Void)? = nil)
  @_Concurrency.MainActor @preconcurrency @objc public func userContentController(_: WebKit.WKUserContentController, didReceive message: WebKit.WKScriptMessage)
  @objc deinit
}
@objc @objcMembers public class KvSet : ObjectiveC.NSObject {
  @objc public init(gender: Swift.String? = nil, birthday: Swift.String? = nil, age: Swift.String? = nil, postalCode: Swift.String? = nil, email: Swift.String? = nil, hashedEmail: Swift.String? = nil)
  @objc deinit
}
extension CompassIosSdk.CompassInterstitialUIView : Swift.Sendable {}
